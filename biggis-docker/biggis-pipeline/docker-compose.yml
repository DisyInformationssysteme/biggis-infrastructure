version: '2'
services:

  zookeeper:
    image: biggis/zookeeper:3.4.6
    restart: always
    hostname: zookeeper
    environment:
      USER_ID: ${USER_ID}
      USER_NAME: zookeeper
    volumes:
      - zookeeper-data:/tmp/zookeeper/data

  kafka:
    image: biggis/kafka:0.9.0.0
    restart: always
    hostname: kafka
    depends_on:
      - zookeeper
    # ports:
    #   - "9092:9092"
    environment:
    #  KAFKA_ADVERTISED_HOST_NAME: 192.168.99.100
      USER_ID: ${USER_ID}
      USER_NAME: kafka
    volumes:
      - kafka-data:/tmp/kafka/data

  jobmanager:
    image: biggis/flink:1.0.3
    restart: always
    hostname: jobmanager
    depends_on:
      - db
      - kafka
    # network_mode: "host"
    ports:
      - "8081:8081"
      - "6123:6123"
    command: docker-entrypoint.sh jobmanager
    environment:
      USER_ID: ${USER_ID}
      USER_NAME: flink
    volumes:
      - flink-conf:/opt/flink/conf

  taskmanager:
    image: biggis/flink:1.0.3
    restart: always
    hostname: taskmanager
    depends_on:
      - jobmanager
    command: docker-entrypoint.sh taskmanager
    environment:
      USER_ID: ${USER_ID}
      USER_NAME: flink
    volumes_from:
      - jobmanager
    volumes:
      - storage-rasteringest:/storage/rasteringest:ro
      - storage-normtiles:/storage/normtiles
      - storage-hstiles:/storage/hstiles

  collector:
    image: biggis/collector:0.9.0.0
    hostname: collector
    depends_on:
      - kafka
    environment:
      USER_ID: ${USER_ID}
      USER_NAME: collector
    volumes:
      - storage-rasteringest:/storage/rasteringest

  db:
    image: biggis/mariadb:10.1
    restart: always
    hostname: db
    ports:
      - 3306:3306
    volumes:
      - db-data:/opt/mysql

# networks:
#   collect:
#   backbone:
#   db:

volumes:
  zookeeper-data:
  kafka-data:
  db-data:
  storage-rasteringest:
  storage-normtiles:
  storage-hstiles:
  flink-conf:
